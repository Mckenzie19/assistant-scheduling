#logback.classic pattern: %d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n
15:39:11.437 DEBUG a.AssistantSchedulingApp - Closing application... 
15:39:11.816 DEBUG o.d.a.ObjectTypeNodeCompiler - Compiling Alpha Network: 
15:39:12.020 DEBUG o.d.a.ObjectTypeNodeCompiler - Generated Compiled Alpha Network package org.drools.ancompiler;
public class Compiledassistantscheduling_domain_ServiceAssignmentNetwork3791638180 extends org.drools.ancompiler.CompiledNetwork{ 
private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(Compiledassistantscheduling_domain_ServiceAssignmentNetwork3791638180.class);
org.drools.base.rule.accessor.ReadAccessor readAccessor;
public void init(Object... args) {
}private org.drools.modelcompiler.constraints.LambdaConstraint lambdaConstraint4; // [AlphaNode(4) constraint=[Constraint for 'Filter using org.optaplanner.core.impl.domain.entity.descriptor.EntityDescriptor$$Lambda/0x000000080018aaa0@577ec7fe' (index: null), ]]
private org.drools.base.rule.ContextEntry contextEntry4;
private org.drools.modelcompiler.constraints.LambdaConstraint lambdaConstraint5; // [AlphaNode(5) constraint=[Constraint for 'Filter using assistantscheduling.solver.AssistantSchedulingConstraintProvider$$Lambda/0x00000008001af660@7bc222b4' (index: null), ]]
private org.drools.base.rule.ContextEntry contextEntry5;
private org.drools.core.reteoo.AlphaTerminalNode alphaTerminalNode6; // [AlphaTerminalNode(6)]
private org.drools.core.reteoo.JoinNode joinNode9; // [JoinNode(9) - [ClassObjectType class=assistantscheduling.domain.ServiceAssignment]]
private org.drools.core.reteoo.JoinNode joinNode10; // [JoinNode(10) - [ClassObjectType class=assistantscheduling.domain.ServiceAssignment]]
private org.drools.core.reteoo.JoinNode joinNode14; // [JoinNode(14) - [ClassObjectType class=assistantscheduling.domain.ServiceAssignment]]
private org.drools.core.reteoo.JoinNode joinNode18; // [JoinNode(18) - [ClassObjectType class=assistantscheduling.domain.ServiceAssignment]]
private org.drools.core.reteoo.AccumulateNode accumulateNode22; // [ AccumulateNode(22) ]
private org.drools.modelcompiler.constraints.LambdaConstraint lambdaConstraint24; // [AlphaNode(24) constraint=[Constraint for 'Filter using assistantscheduling.solver.AssistantSchedulingConstraintProvider$$Lambda/0x000000080021c800@3ba8d070' (index: null), ]]
private org.drools.base.rule.ContextEntry contextEntry24;
private org.drools.core.reteoo.AlphaTerminalNode alphaTerminalNode25; // [AlphaTerminalNode(25)]
private org.drools.core.reteoo.AccumulateNode accumulateNode27; // [ AccumulateNode(27) ]
private org.drools.core.reteoo.LeftInputAdapterNode leftInputAdapterNode32; // [LeftInputAdapterNode(32)]
private org.drools.core.reteoo.JoinNode joinNode33; // [JoinNode(33) - [ClassObjectType class=assistantscheduling.domain.ServiceAssignment]]
private org.drools.modelcompiler.constraints.LambdaConstraint lambdaConstraint29; // [AlphaNode(29) constraint=[Constraint for 'Filter using assistantscheduling.solver.AssistantSchedulingConstraintProvider$$Lambda/0x0000000800220000@2e47af32' (index: null), ]]
private org.drools.base.rule.ContextEntry contextEntry29;
private org.drools.core.reteoo.AlphaTerminalNode alphaTerminalNode30; // [AlphaTerminalNode(30)]
private org.drools.modelcompiler.constraints.LambdaConstraint lambdaConstraint37; // [AlphaNode(37) constraint=[Constraint for 'Exclude nulls using org.optaplanner.core.impl.domain.entity.descriptor.EntityDescriptor$$Lambda/0x000000080018aaa0@577ec7fe' (index: null), ]]
private org.drools.base.rule.ContextEntry contextEntry37;
private org.drools.core.reteoo.NotNode notNode38; // [NotNode(38) - [ClassObjectType class=assistantscheduling.domain.ServiceAssignment]]
public Compiledassistantscheduling_domain_ServiceAssignmentNetwork3791638180(org.drools.base.rule.accessor.ReadAccessor readAccessor, java.util.Map<String, org.drools.core.util.index.AlphaRangeIndex> rangeIndexDeclarationMap) {
this.readAccessor = readAccessor;
}
protected boolean isInlined() { return false; }protected void setNetworkNodeReference(org.drools.base.common.NetworkNode node) {
    boolean setNetworkResult0 = setNetworkNode0(node);
    if (setNetworkResult0) {
        return;
    }
}
private boolean setNetworkNode0(org.drools.base.common.NetworkNode node) {
    switch(node.getId()) {
        case 4:
            lambdaConstraint4 = (org.drools.modelcompiler.constraints.LambdaConstraint) ((org.drools.core.reteoo.AlphaNode) node).getConstraint();
            return true;
        case 5:
            lambdaConstraint5 = (org.drools.modelcompiler.constraints.LambdaConstraint) ((org.drools.core.reteoo.AlphaNode) node).getConstraint();
            return true;
        case 6:
            alphaTerminalNode6 = (org.drools.core.reteoo.AlphaTerminalNode) node;
            return true;
        case 9:
            joinNode9 = (org.drools.core.reteoo.JoinNode) node;
            return true;
        case 10:
            joinNode10 = (org.drools.core.reteoo.JoinNode) node;
            return true;
        case 14:
            joinNode14 = (org.drools.core.reteoo.JoinNode) node;
            return true;
        case 18:
            joinNode18 = (org.drools.core.reteoo.JoinNode) node;
            return true;
        case 22:
            accumulateNode22 = (org.drools.core.reteoo.AccumulateNode) node;
            return true;
        case 24:
            lambdaConstraint24 = (org.drools.modelcompiler.constraints.LambdaConstraint) ((org.drools.core.reteoo.AlphaNode) node).getConstraint();
            return true;
        case 25:
            alphaTerminalNode25 = (org.drools.core.reteoo.AlphaTerminalNode) node;
            return true;
        case 27:
            accumulateNode27 = (org.drools.core.reteoo.AccumulateNode) node;
            return true;
        case 32:
            leftInputAdapterNode32 = (org.drools.core.reteoo.LeftInputAdapterNode) node;
            return true;
        case 33:
            joinNode33 = (org.drools.core.reteoo.JoinNode) node;
            return true;
        case 29:
            lambdaConstraint29 = (org.drools.modelcompiler.constraints.LambdaConstraint) ((org.drools.core.reteoo.AlphaNode) node).getConstraint();
            return true;
        case 30:
            alphaTerminalNode30 = (org.drools.core.reteoo.AlphaTerminalNode) node;
            return true;
        case 37:
            lambdaConstraint37 = (org.drools.modelcompiler.constraints.LambdaConstraint) ((org.drools.core.reteoo.AlphaNode) node).getConstraint();
            return true;
        case 38:
            notNode38 = (org.drools.core.reteoo.NotNode) node;
            return true;
    }
    return false;
}
public final void propagateAssertObject(org.drools.core.common.InternalFactHandle handle, org.drools.core.common.PropagationContext context, org.drools.core.common.ReteEvaluator wm) {
    if (logger.isDebugEnabled()) {
        logger.debug("propagateAssertObject on compiled alpha network {} {} {}", handle, context, wm);
    }
    if (lambdaConstraint4.isAllowed(handle, wm)) {
        if (lambdaConstraint5.isAllowed(handle, wm)) {
            alphaTerminalNode6.assertObject(handle, context, wm);
        }
        joinNode9.assertObject(handle, context, wm);
        joinNode10.assertObject(handle, context, wm);
        joinNode14.assertObject(handle, context, wm);
        joinNode18.assertObject(handle, context, wm);
        accumulateNode22.assertObject(handle, context, wm);
        if (lambdaConstraint24.isAllowed(handle, wm)) {
            alphaTerminalNode25.assertObject(handle, context, wm);
        }
        accumulateNode27.assertObject(handle, context, wm);
        leftInputAdapterNode32.assertObject(handle, context, wm);
        joinNode33.assertObject(handle, context, wm);
    }
    if (lambdaConstraint29.isAllowed(handle, wm)) {
        alphaTerminalNode30.assertObject(handle, context, wm);
    }
    if (lambdaConstraint37.isAllowed(handle, wm)) {
        notNode38.assertObject(handle, context, wm);
    }
}
public final void propagateModifyObject(org.drools.core.common.InternalFactHandle handle, org.drools.core.reteoo.ModifyPreviousTuples modifyPreviousTuples, org.drools.core.common.PropagationContext context, org.drools.core.common.ReteEvaluator wm) {
    if (logger.isDebugEnabled()) {
        logger.debug("propagateModifyObject on compiled alpha network {} {} {}", handle, context, wm);
    }
    if (lambdaConstraint4.isAllowed(handle, wm)) {
        if (lambdaConstraint5.isAllowed(handle, wm)) {
            alphaTerminalNode6.modifyObject(handle, modifyPreviousTuples, context, wm);
        }
        joinNode9.modifyObject(handle, modifyPreviousTuples, context, wm);
        joinNode10.modifyObject(handle, modifyPreviousTuples, context, wm);
        joinNode14.modifyObject(handle, modifyPreviousTuples, context, wm);
        joinNode18.modifyObject(handle, modifyPreviousTuples, context, wm);
        accumulateNode22.modifyObject(handle, modifyPreviousTuples, context, wm);
        if (lambdaConstraint24.isAllowed(handle, wm)) {
            alphaTerminalNode25.modifyObject(handle, modifyPreviousTuples, context, wm);
        }
        accumulateNode27.modifyObject(handle, modifyPreviousTuples, context, wm);
        leftInputAdapterNode32.modifyObject(handle, modifyPreviousTuples, context, wm);
        joinNode33.modifyObject(handle, modifyPreviousTuples, context, wm);
    }
    if (lambdaConstraint29.isAllowed(handle, wm)) {
        alphaTerminalNode30.modifyObject(handle, modifyPreviousTuples, context, wm);
    }
    if (lambdaConstraint37.isAllowed(handle, wm)) {
        notNode38.modifyObject(handle, modifyPreviousTuples, context, wm);
    }
}

    public short getType() {
        return objectTypeNode.getType();
    }


    public boolean isAssociatedWith( org.kie.api.definition.rule.Rule rule ) {
        return objectTypeNode.isAssociatedWith(rule);
    }
 
    public void byPassModifyToBetaNode (org.drools.core.common.InternalFactHandle factHandle,
                                        org.drools.core.reteoo.ModifyPreviousTuples modifyPreviousTuples,
                                        org.drools.core.common.PropagationContext context,
                                        org.drools.core.common.ReteEvaluator reteEvaluator) {
        throw new UnsupportedOperationException();
    }

}

15:39:12.020 DEBUG o.d.a.ObjectTypeNodeCompiler - Compiling Alpha Network: 
15:39:12.030 DEBUG o.d.a.ObjectTypeNodeCompiler - Generated Compiled Alpha Network package org.drools.ancompiler;
public class Compiledassistantscheduling_domain_AssistantNetwork351616003184 extends org.drools.ancompiler.CompiledNetwork{ 
private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(Compiledassistantscheduling_domain_AssistantNetwork351616003184.class);
org.drools.base.rule.accessor.ReadAccessor readAccessor;
public void init(Object... args) {
}private org.drools.core.reteoo.LeftInputAdapterNode leftInputAdapterNode36; // [LeftInputAdapterNode(36)]
public Compiledassistantscheduling_domain_AssistantNetwork351616003184(org.drools.base.rule.accessor.ReadAccessor readAccessor, java.util.Map<String, org.drools.core.util.index.AlphaRangeIndex> rangeIndexDeclarationMap) {
this.readAccessor = readAccessor;
}
protected boolean isInlined() { return false; }protected void setNetworkNodeReference(org.drools.base.common.NetworkNode node) {
    boolean setNetworkResult0 = setNetworkNode0(node);
    if (setNetworkResult0) {
        return;
    }
}
private boolean setNetworkNode0(org.drools.base.common.NetworkNode node) {
    switch(node.getId()) {
        case 36:
            leftInputAdapterNode36 = (org.drools.core.reteoo.LeftInputAdapterNode) node;
            return true;
    }
    return false;
}
public final void propagateAssertObject(org.drools.core.common.InternalFactHandle handle, org.drools.core.common.PropagationContext context, org.drools.core.common.ReteEvaluator wm) {
    if (logger.isDebugEnabled()) {
        logger.debug("propagateAssertObject on compiled alpha network {} {} {}", handle, context, wm);
    }
    leftInputAdapterNode36.assertObject(handle, context, wm);
}
public final void propagateModifyObject(org.drools.core.common.InternalFactHandle handle, org.drools.core.reteoo.ModifyPreviousTuples modifyPreviousTuples, org.drools.core.common.PropagationContext context, org.drools.core.common.ReteEvaluator wm) {
    if (logger.isDebugEnabled()) {
        logger.debug("propagateModifyObject on compiled alpha network {} {} {}", handle, context, wm);
    }
    leftInputAdapterNode36.modifyObject(handle, modifyPreviousTuples, context, wm);
}

    public short getType() {
        return objectTypeNode.getType();
    }


    public boolean isAssociatedWith( org.kie.api.definition.rule.Rule rule ) {
        return objectTypeNode.isAssociatedWith(rule);
    }
 
    public void byPassModifyToBetaNode (org.drools.core.common.InternalFactHandle factHandle,
                                        org.drools.core.reteoo.ModifyPreviousTuples modifyPreviousTuples,
                                        org.drools.core.common.PropagationContext context,
                                        org.drools.core.common.ReteEvaluator reteEvaluator) {
        throw new UnsupportedOperationException();
    }

}

15:39:12.637 DEBUG o.d.a.CompiledNetworkSources - Setting [ObjectTypeNode(35)::EntryPoint::DEFAULT objectType=[ClassObjectType class=assistantscheduling.domain.Assistant] expiration=-1ms ] as starting node of: org.drools.ancompiler.Compiledassistantscheduling_domain_AssistantNetwork351616003184
15:39:12.641 DEBUG o.d.a.CompiledNetworkSources - Setting [ObjectTypeNode(3)::EntryPoint::DEFAULT objectType=[ClassObjectType class=assistantscheduling.domain.ServiceAssignment] expiration=-1ms ] as starting node of: org.drools.ancompiler.Compiledassistantscheduling_domain_ServiceAssignmentNetwork3791638180
